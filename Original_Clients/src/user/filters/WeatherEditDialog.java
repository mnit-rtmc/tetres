/*
 * Copyright (C) 2018 NATSRL @ UMD (University Minnesota Duluth)
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package user.filters;

import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author "Chongmyung Park <chongmyung.park@gmail.com>"
 */
public final class WeatherEditDialog extends FilterEditDialog {
   
    private final String INTENSITY_ANY = "Any";
    private final String INTENSITY_LIGHT = "Light";
    private final String INTENSITY_MODERATE = "Moderate";
    private final String INTENSITY_HEAVY = "Heavy";
    private final String[] intensities;
    
    /**
     * Creates new form WeatherEditDialog
     *
     * @param parent
     * @param modal
     */
    public WeatherEditDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
                
        this.cbxIntensity.removeAllItems();
        this.cbxIntensity.addItem(INTENSITY_LIGHT);
        this.cbxIntensity.addItem(INTENSITY_MODERATE);
        this.cbxIntensity.addItem(INTENSITY_HEAVY);
        this.cbxIntensity.addItem(INTENSITY_ANY);
        
        this.intensities = new String[]{INTENSITY_LIGHT, INTENSITY_MODERATE, INTENSITY_HEAVY};
    }

    @Override
    public void reset() {
        this.cbxType.setSelectedIndex(0);
        this.cbxIntensity.setSelectedIndex(0);
        this.cbxIntensity.setEnabled(false);
        this.setLocationRelativeTo(this.getParent());
        this.isChanged = false;
    }

    @Override
    public void updateDataTable() {
        String type = this.cbxType.getSelectedItem().toString();
        String intensity = this.cbxIntensity.getSelectedItem().toString();
        if (this.cbxType.getSelectedIndex() == 0) {
            intensity = "";
        }
        
        DefaultTableModel model = (DefaultTableModel) this.table.getModel();
        
        List<String> targetIntensities = new ArrayList<String>();      
        targetIntensities.add(intensity);

        int nAdded = 0;
        for(String _intensity : targetIntensities) {
            if(this.hasValueInTable(type, _intensity)) {
                continue;
            }
            nAdded += 1;
            model.addRow(new Object[]{type, _intensity});
        }
       
        if(nAdded == 0) {
//            JOptionPane.showMessageDialog(this, "Fail to add");
            return;
        }        

        this.isChanged = true;
    }
    
    
    private boolean hasValueInTable(String type, String intensity) {
        for (int i = 0; i < this.table.getRowCount(); i++) {
            String _type = this.table.getValueAt(i, 0).toString().trim();
            String _intensity = this.table.getValueAt(i, 1).toString().trim();
            if(_type.equals(type) && _intensity.equals(intensity)) {
                return true;
            }
        }
        return false;        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cbxType = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cbxIntensity = new javax.swing.JComboBox<>();
        btnOK = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Weather Filter Dialog");

        jLabel2.setText("Type");

        cbxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dry", "Drizzle", "Rain", "Snow" }));
        cbxType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTypeActionPerformed(evt);
            }
        });

        jLabel3.setText("Intensity");

        cbxIntensity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Light", "Moderate", "Heavy", "Any" }));

        btnOK.setText("Ok");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(btnClose))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxIntensity, 0, 295, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbxType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbxIntensity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOK)
                    .addComponent(btnClose))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {
        this.updateDataTable();
    }

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {
        this.setVisible(false);
    }

    private void cbxTypeActionPerformed(java.awt.event.ActionEvent evt) {
        this.cbxIntensity.setEnabled(this.cbxType.getSelectedIndex() != 0);
    }

    // Variables declaration - do not modify
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnOK;
    private javax.swing.JComboBox<String> cbxIntensity;
    private javax.swing.JComboBox<String> cbxType;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration


}
