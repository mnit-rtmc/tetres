/*
 * Copyright (C) 2018 NATSRL @ UMD (University Minnesota Duluth)
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package ticas.tetres.admin;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import ticas.common.ui.IInitializable;
import ticas.tetres.admin.actionlog.ActionLogPanel;
import ticas.tetres.admin.ocdata.OperatingConditionPanel;
import ticas.tetres.admin.route.RouteConfigPanel;
import ticas.tetres.admin.sysconfig.PanelSystemConfig;

/**
 *
 * @author Chongmyung Park <chongmyung.park@gmail.com>
 */
public class TeTRESPanel extends javax.swing.JPanel implements IInitializable {

    private List<Integer> initializedTabs = new ArrayList<Integer>();
    private RouteConfigPanel panRouteConfig;
    private OperatingConditionPanel panOperationConditions;
    private ActionLogPanel panActionLogs;
    private PanelSystemConfig panSystemConfigs;

    /**
     * Creates new form NCRTMain
     */
    public TeTRESPanel() {
        initComponents();
    }

    public TeTRESPanel(JFrame mainFrame) {
        initComponents();
        TeTRESConfig.mainFrame = mainFrame;
    }

    @Override
    public void init() {
        
        this.panRouteConfig = new RouteConfigPanel();
        this.panOperationConditions = new OperatingConditionPanel();
        this.panActionLogs = new ActionLogPanel();
        this.panSystemConfigs = new PanelSystemConfig();
        
        this.mainTab.add("Route Config", this.panRouteConfig);
        this.mainTab.add("Operating Condition Data Input", this.panOperationConditions);
        this.mainTab.add("Data Change Log", this.panActionLogs);
        this.mainTab.add("System Configurations", this.panSystemConfigs);
        
        TeTRESInfoLoader.getInstance().init(new TeTRESInfoLoader.ICallback() {
            @Override
            public void ready() {
                panRouteConfig.init();
                ChangeListener changeListener = new ChangeListener() {
                    @Override
                    public void stateChanged(ChangeEvent changeEvent) {
                        Integer idx = mainTab.getSelectedIndex();
                        IInitializable tab = (IInitializable) mainTab.getSelectedComponent();
                        
                        if (initializedTabs.contains(idx)) {
                            tab.refresh();
                            return;
                        }
                        initializedTabs.add(idx);                        
                        tab.init();
                    }
                };
                mainTab.addChangeListener(changeListener);                
            }

            @Override
            public void fail() {
                JOptionPane.showMessageDialog(TeTRESConfig.mainFrame, "Fail to connect to TTMRS server");
            }
        });

    }
    

    @Override
    public void refresh() {
        // do nothing
    }    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTab = new javax.swing.JTabbedPane();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTab, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTab, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane mainTab;
    // End of variables declaration//GEN-END:variables

}
